package mx.com.ikusi.brms.ws;

/**
 * This class was automatically generated by the data modeler tool.
 */

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.io.OutputStreamWriter;
import java.net.URL;
import com.thoughtworks.xstream.XStream;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;
import javax.xml.xpath.XPathExpressionException;
import org.w3c.dom.*;
import javax.xml.parsers.*;
import java.io.*;
import org.xml.sax.InputSource;
import org.xml.sax.*;
import mx.com.ikusi.brms.model.Request;
/**
 * This class was automatically generated by the data modeler tool.
 */

public class RestFuse implements java.io.Serializable {

    static final long serialVersionUID = 1L;

    public RestFuse() {
    }


    public static void sendMesagge(String param){
        try {

            URL url = new URL("http://10.3.129.24:24246/fusebrms/timer/executeRules");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setDoOutput(true);
            conn.setRequestProperty("Content-Type", "text/plain");
            OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream(), "UTF-8");
            writer.write(param);
            writer.close();
            
            

            if (conn.getResponseCode() != 200) {
                throw new RuntimeException("Failed : HTTP error code : "
                        + conn.getResponseCode());
            }

            BufferedReader br = new BufferedReader(new InputStreamReader(
                (conn.getInputStream())));

            String output="";
            System.out.println("Output from Server .... \n");
            while ((output = br.readLine()) != null) {
                //System.out.println(output);
            }

            conn.disconnect();

          } catch (MalformedURLException e) {

            e.printStackTrace();

          } catch (IOException e) {

            e.printStackTrace();

          }

        
    }



     public static void sendToFuse(Request request){
        try {
            XPath xPath =  XPathFactory.newInstance().newXPath();
            XStream xstream = new XStream();
            String xml = xstream.toXML(request);
            
            URL url = new URL("http://10.3.129.24:24246/fusebrms/response/responseBRMS");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setDoOutput(true);
            conn.setRequestProperty("Content-Type", "text/plain");
            OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream(), "UTF-8");
            writer.write(xml);
            writer.close();
            
            

            if (conn.getResponseCode() != 201 && conn.getResponseCode() != 200 ) {
                throw new RuntimeException("Failed : HTTP error code : "
                        + conn.getResponseCode());
            }

            BufferedReader br = new BufferedReader(new InputStreamReader(
                (conn.getInputStream())));


            
            String output="";
            String xmlString="";
            System.out.println("Output from Server .... \n");
            while ((output = br.readLine()) != null) {
                xmlString+=output;
            }

            //System.out.println("before while"+xmlString);
           

            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();  
            DocumentBuilder builder;  
    try  
    {  
        builder = factory.newDocumentBuilder();  
        Document document = builder.parse( new InputSource( new StringReader( xmlString ) ) );  
    
            
            
            String expression = "/response/result/sys_id";
            
    
                
                String sysid = xPath.compile(expression).evaluate(document);
                  request.setSysId(sysid); 
                System.out.println("Asiganando valor sysid: "+sysid);
            }catch(XPathExpressionException xpe){
                
            }catch(SAXException s){
                
            }catch(ParserConfigurationException ssa){}
              
            
            
            conn.disconnect();

          } catch (MalformedURLException e) {

            e.printStackTrace();

          } catch (IOException e) {

            e.printStackTrace();

          }

        
    }


}