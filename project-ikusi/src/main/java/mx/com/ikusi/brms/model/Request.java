package mx.com.ikusi.brms.model;

/**
 * This class was automatically generated by the data modeler tool.
 */
import com.thoughtworks.xstream.annotations.XStreamAsAttribute;
import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamImplicit;
import javax.xml.bind.annotation.XmlRootElement;
import com.thoughtworks.xstream.annotations.XStreamConverter;
import com.thoughtworks.xstream.converters.collections.CollectionConverter;

/**
 * This class was automatically generated by the data modeler tool.
 */

@javax.xml.bind.annotation.XmlRootElement(name = "request")
@org.kie.api.definition.type.Role(org.kie.api.definition.type.Role.Type.EVENT)
@org.kie.api.definition.type.Expires("1h35m")
public class Request implements java.io.Serializable


{

   static final long serialVersionUID = 1L;


   @org.kie.api.definition.type.Label("event")
   @com.thoughtworks.xstream.annotations.XStreamAlias("event")
   private Event event;
   @org.kie.api.definition.type.Label("device")
   @com.thoughtworks.xstream.annotations.XStreamAlias("device")
   private Device device;
   @org.kie.api.definition.type.Label("metrics")
   @com.thoughtworks.xstream.annotations.XStreamAlias("metrics")
   private Metrics metrics;
   @org.kie.api.definition.type.Label("parents")
   @com.thoughtworks.xstream.annotations.XStreamAlias("parents")
   private Parents parents;

   @org.kie.api.definition.type.Label("response")
   @com.thoughtworks.xstream.annotations.XStreamAlias("response")
   private Response response;

  

   @org.kie.api.definition.type.Label("statusBRMS")
   private java.lang.String statusBRMS;

   @org.kie.api.definition.type.Label("sys_id")
   private java.lang.String sysId;

   private Jerarquia jerarquia;


   public Request()
   {
   }

   public Event getEvent()
   {
      return this.event;
   }

   public void setEvent(Event event)
   {
      this.event = event;
   }

   public Device getDevice()
   {
      return this.device;
   }

   public void setDevice(Device device)
   {
      this.device = device;
   }

   public Metrics getMetrics()
   {
      return this.metrics;
   }

   public void setMetrics(Metrics metrics)
   {
      this.metrics = metrics;
   }

   public Parents getParents()
   {
      return this.parents;
   }

   public void setParents(Parents parents)
   {
      this.parents = parents;
   }

   public Response getResponse()
   {
      return this.response;
   }

   public void setResponse(Response response)
   {
      this.response = response;
   }


   public java.lang.String getStatusBRMS()
   {
      return this.statusBRMS;
   }

   public void setStatusBRMS(java.lang.String statusBRMS)
   {
      this.statusBRMS = statusBRMS;
   }

   public java.lang.String getSysId()
   {
      return this.sysId;
   }

   public void setSysId(java.lang.String sysId)
   {
      this.sysId = sysId;
   }

   public Jerarquia getJerarquia()
   {
      return this.jerarquia;
   }

   public void setJerarquia(Jerarquia jerarquia)
   {
      this.jerarquia = jerarquia;
   }

   public String toString()
   {

      return "idDevice:: " + this.device.getSysId()+" name: "+this.device.getName();
   }

  

 

   public Request(Event event,
         Device device,
         Metrics metrics,
         Parents parents,
         Response response,
         java.lang.String statusBRMS, java.lang.String sysId,
         Jerarquia jerarquia
        )
   {
      this.event = event;
      this.device = device;
      this.metrics = metrics;
      this.parents = parents;
      this.response = response;
      this.statusBRMS = statusBRMS;
      this.sysId = sysId;
      this.jerarquia = jerarquia;
   }


 @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (!(obj instanceof Request))
            return false;
        Request other = (Request) obj;
        if (getDevice() == null) {
            if (other.getDevice() != null)
                return false;
        } else if (!getDevice().getSysId().equals(other.getDevice().getSysId()))
            return false;
        return true;
    }
    
/**
 public int hashCode()
	{
		return getDevice().getSysId().hashCode();
	}

**/

}