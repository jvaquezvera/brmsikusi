package mx.com.ikusi.brms.model;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class Jerarquia implements java.io.Serializable
{

   static final long serialVersionUID = 1L;

   private java.lang.String id;
   private java.lang.String type;
   private java.util.List<Nodo> nodos;

   private java.lang.String status;

   private java.util.List<mx.com.ikusi.brms.model.Incident> incidents;

   public Jerarquia()
   {
       nodos= new  java.util.ArrayList<>();
       incidents= new  java.util.ArrayList<>();
   }

   public java.lang.String getId()
   {
      return this.id;
   }

   public void setId(java.lang.String id)
   {
      this.id = id;
   }

   public java.lang.String getType()
   {
      return this.type;
   }

   public void setType(java.lang.String type)
   {
      this.type = type;
   }

   public java.util.List<Nodo> getNodos()
   {
      return this.nodos;
   }

   public void setNodos(java.util.List<Nodo> nodos)
   {
      this.nodos = nodos;
   }

   public java.lang.String getStatus()
   {
      return this.status;
   }

   public void setStatus(java.lang.String status)
   {
      this.status = status;
   }

   public java.util.List<mx.com.ikusi.brms.model.Incident> getIncidents()
   {
      return this.incidents;
   }

   public void setIncidents(
         java.util.List<mx.com.ikusi.brms.model.Incident> incidents)
   {
      this.incidents = incidents;
   }

   public Jerarquia(java.lang.String id, java.lang.String type,
         java.util.List<mx.com.ikusi.brms.model.Nodo> nodos,
         java.lang.String status,
         java.util.List<mx.com.ikusi.brms.model.Incident> incidents)
   {
      this.id = id;
      this.type = type;
      this.nodos = nodos;
      this.status = status;
      this.incidents = incidents;
   }


    public void addIncident(mx.com.ikusi.brms.model.Incident incident){
        System.out.println("en el nuevo metodo v2");
        boolean reemplace=false;
        boolean insert=true;
        java.util.List<mx.com.ikusi.brms.model.Incident> toDelete= new  java.util.ArrayList<>();
        
        
        if(incidents != null ){
            
            for(Incident inci: incidents){
                if(inci.getName().equals(incident.getName())){
                    incident.getRequestAsociated().addAll(inci.getRequestAsociated());
                    toDelete.add(inci);
                    reemplace=true;
                }
                
                if((inci.getRequest().getDevice().getSysId().equals(incident.getRequest().getDevice().getSysId()) || inci.getRequestAsociated().contains(incident.getRequest())
                   ) && incident.getRequestAsociated().size() > inci.getRequestAsociated().size()){
                    System.out.println("remplazando incident: "+inci+" por incidente: "+incident);   
                    toDelete.add(inci);
                    reemplace=true;
                }
                
                for(Request req:incident.getRequestAsociated()){
                    if((inci.getRequestAsociated().contains(req) || req.getDevice().getSysId().equals(inci.getRequest().getDevice().getSysId())  )&& incident.getRequestAsociated().size() > inci.getRequestAsociated().size())
                    System.out.println("remplazando incident: "+inci+" por incidente: "+incident);   
                    toDelete.add(inci);
                    reemplace=true;
                }
            }
            
        if(reemplace){
            for(Incident in:toDelete){
                incidents.remove(in);
            }
            
        }
          
        incidents.add(incident);
    
            
        }
        
    }

}